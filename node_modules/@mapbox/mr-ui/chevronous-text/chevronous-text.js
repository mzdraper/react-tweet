'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _icon = require('../icon');

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ChevronousText = function (_React$PureComponent) {
  (0, _inherits3.default)(ChevronousText, _React$PureComponent);

  function ChevronousText() {
    (0, _classCallCheck3.default)(this, ChevronousText);
    return (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.apply(this, arguments));
  }

  ChevronousText.prototype.render = function render() {
    var splitText = this.props.text.split(' ');
    var lastWord = splitText.pop();
    var textWithoutLastWord = splitText.join(' ');

    return _react2.default.createElement(
      'span',
      null,
      textWithoutLastWord,
      ' ',
      _react2.default.createElement(
        'span',
        { className: 'txt-nowrap' },
        lastWord,
        _react2.default.createElement(_icon2.default, {
          name: 'chevron-right',
          inline: true,
          themeIcon: this.props.themeIcon
        })
      )
    );
  };

  return ChevronousText;
}(_react2.default.PureComponent);

ChevronousText.propTypes = {
  /** The text that should be aligned next to the chevron. */
  text: _propTypes2.default.string.isRequired,
  /** Additional classes to apply to the icon element */
  themeIcon: _propTypes2.default.string
};
exports.default = ChevronousText;