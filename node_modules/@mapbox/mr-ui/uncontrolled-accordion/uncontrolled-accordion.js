'use strict';

exports.__esModule = true;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _accordionItem = require('../accordion-item');

var _accordionItem2 = _interopRequireDefault(_accordionItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var UncontrolledAccordion = function (_React$PureComponent) {
  (0, _inherits3.default)(UncontrolledAccordion, _React$PureComponent);

  function UncontrolledAccordion(props) {
    (0, _classCallCheck3.default)(this, UncontrolledAccordion);

    var _this = (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.call(this, props));

    _this.onToggle = function (id) {
      var onToggle = _this.props.onToggle;

      _this.setState({
        active: id === _this.state.active ? '' : id
      }, function () {
        if (onToggle) onToggle(id);
      });
    };

    _this.state = {
      active: props.initiallyActiveItem ? props.initiallyActiveItem : ''
    };
    return _this;
  }
  // If you change propTypes, also change propNames.


  UncontrolledAccordion.prototype.render = function render() {
    var _this2 = this;

    var _props = this.props,
        items = _props.items,
        themeItem = _props.themeItem,
        themeItemHeader = _props.themeItemHeader,
        themeItemBody = _props.themeItemBody;


    var renderItems = function renderItems(item) {
      return _react2.default.createElement(_accordionItem2.default, (0, _extends3.default)({}, item, {
        key: item.id,
        active: item.id === _this2.state.active,
        onToggle: _this2.onToggle,
        themeItem: themeItem,
        themeItemHeader: themeItemHeader,
        themeItemBody: themeItemBody
      }));
    };

    return _react2.default.createElement(
      'div',
      null,
      items.map(renderItems)
    );
  };

  return UncontrolledAccordion;
}(_react2.default.PureComponent);

UncontrolledAccordion.propTypes = {
  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    /** Identifying value for accordion item. */
    id: _propTypes2.default.string.isRequired,
    /** Contents that are always shown. */
    header: _propTypes2.default.func.isRequired,
    /** Contents that shown when the accordion is active. */
    body: _propTypes2.default.node.isRequired,
    /** Flag to disable the clickability of an accordion item. */
    disabled: _propTypes2.default.bool
  })).isRequired,
  /** Callback when an accordion header item is clicked. */
  onToggle: _propTypes2.default.func,
  /** Value should coorespond to an `id` within the items array. */
  initiallyActiveItem: _propTypes2.default.string,
  /** CSS classes to apply to the accordion item container */
  themeItem: _propTypes2.default.string,
  /** CSS classes to apply to the accordion header */
  themeItemHeader: _propTypes2.default.string,
  /** CSS classes to apply to the accordion body */
  themeItemBody: _propTypes2.default.string
};
exports.default = UncontrolledAccordion;