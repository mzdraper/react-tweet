'use strict';

exports.__esModule = true;

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

exports.default = shallowEqualObjects;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function shallowEqualObjects(objA, objB) {
  var allowedObjectKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  var aKeys = Object.keys(objA);
  var bKeys = Object.keys(objB);
  var len = aKeys.length;

  if (bKeys.length !== len) {
    return false;
  }

  for (var i = 0; i < len; i++) {
    var key = aKeys[i];
    var aVal = objA[key];
    var bVal = objB[key];
    if (allowedObjectKeys.indexOf(key) !== -1) {
      return shallowEqualObjects(aVal, bVal);
    }

    if ((typeof aVal === 'undefined' ? 'undefined' : (0, _typeof3.default)(aVal)) === 'object') {
      throw new Error('shallowEqualObjects can only compare objects whose values are primitives or functions, unless you allow for an object value with the allowedObjectKeys argument');
    }
    if (aVal !== bVal) {
      return false;
    }
  }

  return true;
}