'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AccordionItem = function (_React$Component) {
  (0, _inherits3.default)(AccordionItem, _React$Component);

  function AccordionItem() {
    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, AccordionItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onToggle = function () {
      var _this$props = _this.props,
          id = _this$props.id,
          onToggle = _this$props.onToggle;

      onToggle(id);
    }, _this.renderHeader = function () {
      var _this$props2 = _this.props,
          header = _this$props2.header,
          active = _this$props2.active;

      return header(active);
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  AccordionItem.prototype.render = function render() {
    var _props = this.props,
        id = _props.id,
        active = _props.active,
        body = _props.body,
        disabled = _props.disabled,
        themeItem = _props.themeItem,
        themeItemHeader = _props.themeItemHeader,
        themeItemHeaderDisabled = _props.themeItemHeaderDisabled,
        themeItemBody = _props.themeItemBody;


    var buttonClasses = 'w-full ' + themeItemHeader;
    if (disabled) {
      buttonClasses += ' cursor-default ' + themeItemHeaderDisabled;
    } else {
      buttonClasses += ' cursor-pointer';
    }

    return _react2.default.createElement(
      'div',
      { className: themeItem },
      _react2.default.createElement(
        'button',
        {
          className: buttonClasses,
          disabled: disabled,
          'data-test': id,
          onClick: this.onToggle
        },
        this.renderHeader()
      ),
      active && _react2.default.createElement(
        'div',
        { className: themeItemBody },
        body
      )
    );
  };

  return AccordionItem;
}(_react2.default.Component);

AccordionItem.propTypes = {
  /** Identifying value for accordion item. */
  id: _propTypes2.default.string.isRequired,
  /** Callback when an accordion header item is clicked. */
  onToggle: _propTypes2.default.func.isRequired,
  /** Function that accepts an `active` boolean argument and returns JSX. */
  header: _propTypes2.default.func.isRequired,
  /** Contents that shown when the accordion is active. */
  body: _propTypes2.default.node.isRequired,
  /** Determines if the state of the accordion item is active. */
  active: _propTypes2.default.bool,
  /** Determines if the state of the accordion item is disabled. */
  disabled: _propTypes2.default.bool,
  /** CSS classes to apply to the accordion item container. */
  themeItem: _propTypes2.default.string,
  /** CSS classes to apply to the accordion header. */
  themeItemHeader: _propTypes2.default.string,
  /** CSS classes to apply to the accordion header when `disabled` is true/ */
  themeItemHeaderDisabled: _propTypes2.default.string,
  /** CSS classes to apply to the accordion body. */
  themeItemBody: _propTypes2.default.string
};
AccordionItem.defaultProps = {
  active: false,
  themeItemHeader: 'txt-s txt-bold txt-truncate link link--gray py6',
  themeItemHeaderDisabled: 'color-gray-light'
};
exports.default = AccordionItem;