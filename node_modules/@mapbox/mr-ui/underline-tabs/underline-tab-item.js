'use strict';

exports.__esModule = true;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _underlineTabsConstants = require('./underline-tabs-constants');

var _capitalize = require('../utils/capitalize');

var _capitalize2 = _interopRequireDefault(_capitalize);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var UnderlineTabItem = function (_React$PureComponent) {
  (0, _inherits3.default)(UnderlineTabItem, _React$PureComponent);

  function UnderlineTabItem(props) {
    (0, _classCallCheck3.default)(this, UnderlineTabItem);

    var _this = (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.call(this, props));

    _this.handleClick = _this.handleClick.bind(_this);
    return _this;
  }

  UnderlineTabItem.prototype.handleClick = function handleClick(event) {
    var props = this.props;

    if (props.disabled || props.active) {
      event.preventDefault();
      return;
    }
    props.onClick(props.id, event);
  };

  // If we're overlapping a bottom border, each height must be 2px
  // more than the perceived height to account for the negative
  // margins on top and bottom.


  UnderlineTabItem.prototype.getHeight = function getHeight() {
    var offset = this.props.overlapBorder ? 2 : 0;
    switch (this.props.size) {
      case _underlineTabsConstants.SIZE_SMALL:
        return 36 + offset;
      case _underlineTabsConstants.SIZE_LARGE:
        return 48 + offset;
      default:
        return 42 + offset;
    }
  };

  UnderlineTabItem.prototype.renderBorder = function renderBorder() {
    var props = this.props;

    if (!props.active) {
      return null;
    }
    var borderClasses = (0, _classnames3.default)('absolute bottom left right border-b', {
      'border-b--2': props.size !== _underlineTabsConstants.SIZE_SMALL
    });
    return _react2.default.createElement('span', { className: borderClasses });
  };

  UnderlineTabItem.prototype.render = function render() {
    var _classnames;

    var props = this.props;


    var itemClasses = (0, _classnames3.default)('block relative', (_classnames = {
      'mb-neg1 mt-neg1': props.overlapBorder
    }, _classnames['color-' + props.inactiveColor + ' color-' + props.hoverColor + '-on-hover'] = !props.active && !props.disabled, _classnames['color-' + props.activeColor + ' cursor-default'] = props.active, _classnames['color-gray-light cursor-default'] = props.disabled, _classnames));

    var label = props.label || (0, _capitalize2.default)(props.id);
    var content = _react2.default.createElement(
      'span',
      {
        className: 'block relative flex-parent flex-parent--center-cross',
        style: { height: this.getHeight(props.size) }
      },
      _react2.default.createElement(
        'span',
        { className: 'flex-child' },
        label
      ),
      this.renderBorder()
    );

    var universalProps = {
      onClick: this.handleClick,
      className: itemClasses,
      'data-test': props.id
    };

    if (props.href) {
      return _react2.default.createElement(
        'a',
        (0, _extends3.default)({ href: props.href }, universalProps),
        content
      );
    }

    return _react2.default.createElement(
      'button',
      (0, _extends3.default)({ type: 'button' }, universalProps),
      content
    );
  };

  return UnderlineTabItem;
}(_react2.default.PureComponent);

UnderlineTabItem.propTypes = {
  id: _propTypes2.default.string.isRequired,
  inactiveColor: _propTypes2.default.string.isRequired,
  activeColor: _propTypes2.default.string.isRequired,
  hoverColor: _propTypes2.default.string.isRequired,
  overlapBorder: _propTypes2.default.bool.isRequired,
  label: _propTypes2.default.node,
  size: _propTypes2.default.oneOf([_underlineTabsConstants.SIZE_SMALL, _underlineTabsConstants.SIZE_MEDIUM, _underlineTabsConstants.SIZE_LARGE]),
  active: _propTypes2.default.bool,
  onClick: _propTypes2.default.func,
  href: _propTypes2.default.string,
  disabled: _propTypes2.default.bool
};

UnderlineTabItem.defaultProps = {
  size: _underlineTabsConstants.SIZE_MEDIUM,
  active: false,
  disabled: false
};

exports.default = UnderlineTabItem;