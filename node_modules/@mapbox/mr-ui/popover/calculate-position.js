'use strict';

exports.__esModule = true;
exports.default = calculatePopoverPosition;

var _xtend = require('xtend');

var _xtend2 = _interopRequireDefault(_xtend);

var _calculatePositionContext = require('./calculate-position-context');

var _calculatePositionContext2 = _interopRequireDefault(_calculatePositionContext);

var _calculatePlacementAlignment = require('./calculate-placement-alignment');

var _calculatePlacementAlignment2 = _interopRequireDefault(_calculatePlacementAlignment);

var _calculateBodyStyle = require('./calculate-body-style');

var _calculateBodyStyle2 = _interopRequireDefault(_calculateBodyStyle);

var _calculatePointerStyle = require('./calculate-pointer-style');

var _calculatePointerStyle2 = _interopRequireDefault(_calculatePointerStyle);

var _adjustStylesForAnchorVisibility = require('./adjust-styles-for-anchor-visibility');

var _adjustStylesForAnchorVisibility2 = _interopRequireDefault(_adjustStylesForAnchorVisibility);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Not currently designed to deal with
// - iframes
// - more than one level of sub-document scrolling
// - horizontal scrolling

/**
 * @typedef {Object} PopoverPositionData
 * @property {string} placement
 * @property {string} alignment
 * @property {Object} pointerPositioningStyle
 * @property {Object} bodyPositioningStyle
 */

/**
 * Calculate positioning for a popover. Returns PopoverPositionData.
 *
 * @param {Object} options
 * @param {'top' | 'bottom' | 'left' | 'right'} options.placement
 * @param {'top' | 'bottom' | 'left' | 'right' | 'center' } options.alignment
 * @param {Function} options.getAnchorElement - Returns anchor element.
 * @param {Function} options.getPopoverElement - Returns popover element.
 * @param {Function} [options.getContainingElement] - Returns containing element.
 * @param {number} [options.offsetFromAnchor=5]
 * @param {number} [options.offsetFromEdge]
 * @param {boolean} [options.containWithinViewport=false]
 * @param {Function} [options.getScrollableParentElement] - Returns scrollable parent element.
 * @param {boolean} [options.allowPlacementAxisChange=true]
 * @param {boolean} [options.hasPointer=true]
 * @param {number} [options.pointerBase=12]
 * @param {number} [options.pointerAltitude=6]
 * @param {string} [options.pointerColor='#fff']
 * @param {boolean} [options.hideWhenAnchorIsOffscreen=false]
 * @return {PopoverPositionData}
 */
function calculatePopoverPosition(options) {
  var defaultedOptions = (0, _xtend2.default)(options);
  defaultedOptions.offsetFromAnchor = def(options.offsetFromAnchor, 5);
  defaultedOptions.containWithinViewport = def(options.containWithinViewport, false);
  defaultedOptions.allowPlacementAxisChange = def(options.allowPlacementAxisChange, true);
  defaultedOptions.hasPointer = def(options.hasPointer, true);
  defaultedOptions.pointerAltitude = def(options.pointerAltitude, 6);
  defaultedOptions.pointerBase = def(options.pointerBase, 12);
  defaultedOptions.pointerColor = def(options.pointerColor, '#fff');
  defaultedOptions.hideWhenAnchorIsOffscreen = def(options.hideWhenAnchorIsOffscreen, false);
  if (!defaultedOptions.hasPointer) {
    defaultedOptions.pointerAltitude = 0;
    defaultedOptions.pointerBase = 0;
  }

  var context = (0, _calculatePositionContext2.default)(defaultedOptions);

  var _calculatePlacementAl = (0, _calculatePlacementAlignment2.default)(defaultedOptions, context),
      placement = _calculatePlacementAl.placement,
      alignment = _calculatePlacementAl.alignment;

  var baseBodyStyle = (0, _calculateBodyStyle2.default)(placement, alignment, defaultedOptions, context);

  var basePointerStyle = (0, _calculatePointerStyle2.default)(placement, defaultedOptions, context);

  var _adjustStylesForAncho = (0, _adjustStylesForAnchorVisibility2.default)(basePointerStyle, baseBodyStyle, placement, defaultedOptions, context),
      bodyStyle = _adjustStylesForAncho.bodyStyle,
      pointerStyle = _adjustStylesForAncho.pointerStyle;

  return {
    placement: placement,
    alignment: alignment,
    pointerPositioningStyle: pointerStyle,
    bodyPositioningStyle: bodyStyle
  };
}

function def(a, b) {
  return a === undefined ? b : a;
}