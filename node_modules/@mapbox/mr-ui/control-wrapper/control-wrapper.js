'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _maybeAddPeriod = require('../utils/maybe-add-period');

var _maybeAddPeriod2 = _interopRequireDefault(_maybeAddPeriod);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ControlWrapper = function (_React$PureComponent) {
  (0, _inherits3.default)(ControlWrapper, _React$PureComponent);

  function ControlWrapper() {
    (0, _classCallCheck3.default)(this, ControlWrapper);
    return (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.apply(this, arguments));
  }

  ControlWrapper.prototype.render = function render() {
    var _props = this.props,
        children = _props.children,
        themeControlWrapper = _props.themeControlWrapper,
        validationError = _props.validationError;


    var errorEl = null;
    if (validationError) {
      var validationErrorId = this.props.id + '-error';
      var errorBody = typeof validationError === 'string' ? (0, _maybeAddPeriod2.default)(validationError) : validationError;
      errorEl = _react2.default.createElement(
        'div',
        {
          className: 'bg txt-s mt3 py6 px12 bg-red-faint round border border--red color-red',
          id: validationErrorId,
          'data-test': validationErrorId
        },
        errorBody
      );
    }

    var wrapperClasses = 'relative ' + themeControlWrapper;

    return _react2.default.createElement(
      'div',
      { className: wrapperClasses },
      children,
      _react2.default.createElement(
        'div',
        { role: 'alert' },
        errorEl
      )
    );
  };

  return ControlWrapper;
}(_react2.default.PureComponent);

ControlWrapper.propTypes = {
  /** Should correspond to the identifier of the input. */
  id: _propTypes2.default.string.isRequired,
  /**
   * If provided, the value of this property will show up as an error message.
   * Strings will end with periods.
   */
  validationError: _propTypes2.default.node,
  /** The contents the controlWrapper contains */
  children: _propTypes2.default.node,
  /** A space separated list of Assembly class names to override the existing presentation. */
  themeControlWrapper: _propTypes2.default.string
};
ControlWrapper.defaultProps = {
  themeControlWrapper: ''
};
exports.default = ControlWrapper;